<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ImageBrush x:Key="FractalImage"
                ImageSource="/Assets/Images/ow-fractal-bg.jpg"
                Stretch="UniformToFill"
                AlignmentY="Top"
                AlignmentX="Center"/>
    <Color x:Key="OrangeAccentColor" A="255" R="255" G="156" B="0"/>
    <Color x:Key="OrangeAccentLightColor" A="255" R="255" G="196" B="102"/>
    <Color x:Key="BlueAccentColor" A="255" R="0" G="165" B="226"/>
    <Color x:Key="BlueAccentLightColor" A="255" R="12" G="189" B="255"/>
    <Color x:Key="RedAccentColor" A="255" R="255" G="69" B="0"/>
    <Color x:Key="RedAccentLightColor" A="255" R="255" G="87" B="25"/>
    <Color x:Key="BackgroundDatasColor" A="255" R="60" G="72" B="96"/>
    <Color x:Key="MainForegroundColor" A="200" R="240" G="237" B="242"/>
    <Color x:Key="BlackTransparencyColor" A="200" R="0" G="0" B="0"/>
    <SolidColorBrush x:Key="OrangeAccentBrush" Color="{StaticResource OrangeAccentColor}"/>
    <SolidColorBrush x:Key="OrangeAccentLightBrush" Color="{StaticResource OrangeAccentLightColor}"/>
    <SolidColorBrush x:Key="BlueAccentBrush" Color="{StaticResource BlueAccentColor}"/>
    <SolidColorBrush x:Key="BlueAccentLightBrush" Color="{StaticResource BlueAccentLightColor}"/>
    <SolidColorBrush x:Key="RedAccentBrush" Color="{StaticResource RedAccentColor}"/>
    <SolidColorBrush x:Key="RedAccentLightBrush" Color="{StaticResource RedAccentLightColor}"/>
    <SolidColorBrush x:Key="BackgroundDatasBrush" Color="{StaticResource BackgroundDatasColor}"/>
    <SolidColorBrush x:Key="MainForegroundBrush" Color="{StaticResource MainForegroundColor}"/>
    <SolidColorBrush x:Key="BlackTransparencyBrush" Color="{StaticResource BlackTransparencyColor}"/>


    <Style TargetType="FrameworkElement" x:Key="BaseTextStyle">
        <Setter Property="TextElement.FontSize" Value="16"/>
    </Style>

    <Style TargetType="Grid" x:Key="MainGridStyle">
        <Setter Property="Background" Value="{StaticResource FractalImage}"/>
    </Style>
    <Style TargetType="Grid" x:Key="TopGrid">
        <Setter Property="Background" Value="Black"/>
    </Style>
    <Style TargetType="Border" x:Key="BorderStyle">
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="{StaticResource BackgroundDatasBrush}"/>
    </Style>
    <Style TargetType="Border" x:Key="IconStyle">
        <Setter Property="Background" Value="{DynamicResource OrangeAccentBrush}" />
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="Border" x:Key="LeftIconStyle" BasedOn="{StaticResource IconStyle}">
        <Setter Property="CornerRadius" Value="5,0,0,5"/>
    </Style>
    <Style TargetType="Border" x:Key="HeaderBorderStyle" BasedOn="{StaticResource BorderStyle}">
        <Setter Property="Height" Value="45"/>
        <Setter Property="Margin" Value="5 20 5 5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="ListView" x:Key="AccountsListStyle">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style TargetType="TextBlock" x:Key="MainForegroundStyle" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>
    </Style>
    <Style TargetType="TextBlock" BasedOn="{StaticResource MainForegroundStyle}">
    </Style>
    <Style TargetType="TextBlock" x:Key="AccountsTextblock"  BasedOn="{StaticResource MainForegroundStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="InfosStyle"  BasedOn="{StaticResource MainForegroundStyle}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="Tag" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                             From="1" To="0" 
                                             BeginTime="0:0:5" Duration="0:0:2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="TextBlock" x:Key="IconTextStyle"  BasedOn="{StaticResource MainForegroundStyle}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style TargetType="TextBox" x:Key="EmailTextblockStyle" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="BorderBrush" Value="{DynamicResource OrangeAccentBrush}"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Hyperlink" x:Key="HeaderHyperlink">
        <Setter Property="TextDecorations" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource OrangeAccentBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Image" x:Key="AcountIconButton">
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Height" Value="20"/>
    </Style>
    <Style TargetType="Image" BasedOn="{StaticResource AcountIconButton}" x:Key="PasswordButtonImage">
        <Setter Property="Source" Value="/Assets/Images/password_icon.png"/>
        <Setter Property="ToolTip" Value="Copy password to clipboard"/>
    </Style>
    <Style TargetType="Image" BasedOn="{StaticResource AcountIconButton}" x:Key="EmailButtonImage">
        <Setter Property="Source" Value="/Assets/Images/email_icon.png"/>
        <Setter Property="ToolTip" Value="Copy email to clipboard"/>
    </Style>
    <Style TargetType="Image" x:Key="IconAccountImage">
        <Setter Property="Height" Value="15" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <Style TargetType="Image" x:Key="RankAccountImage">
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="50" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Stretch" Value="Uniform" />
    </Style>

    <Style TargetType="Button" x:Key="MainButton" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="Padding" Value="13 6" />
        <Setter Property="Border.CornerRadius" Value="2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0 2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" Background="{TemplateBinding Background}" BorderThickness="0" >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="UpdateButtonStyle" BasedOn="{StaticResource MainButton}">
        <Setter Property="Background" Value="{StaticResource OrangeAccentBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource OrangeAccentLightBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource OrangeAccentBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="AddButtonStyle" BasedOn="{StaticResource MainButton}">
        <Setter Property="Background" Value="{StaticResource BlueAccentBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BlueAccentLightBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource BlueAccentBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="DeleteButtonStyle" BasedOn="{StaticResource MainButton}">
        <Setter Property="Background" Value="{StaticResource RedAccentBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource MainForegroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RedAccentLightBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource RedAccentBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ProgressBar" x:Key="UpdateProgressBar">
        <Setter Property="IsIndeterminate" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource OrangeAccentBrush}"/>
        <Setter Property="Background" Value="{DynamicResource MainForegroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="70"/>
    </Style>
</ResourceDictionary>